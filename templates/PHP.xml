<templateSet group="PHP">
  <template name="dd" value="var_dump($END$); die();" description="dump and die" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP Expression" value="true" />
      <option name="PHP Statement" value="true" />
    </context>
  </template>
  <template name="mock" value="$$$MOCKNAME$Mock = $this-&gt;prophesize($CLASS$);" description="Mock container" toReformat="true" toShortenFQNames="true">
    <variable name="MOCKNAME" expression="phpVar" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS" expression="camelCase(String)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Statement" value="true" />
    </context>
  </template>
  <template name="containerMock" value="$containerMock = $this-&gt;prophesize(ContainerInterface::class);" description="Mock container" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="PHP Statement" value="true" />
    </context>
  </template>
  <template name="testdi" value="public function testDI(): void&#10;{&#10;    $this-&gt;assertInstanceOf(&#10;        $CLASS$::class,&#10;        $this-&gt;getApplicationServiceLocator()-&gt;get($CLASS$::class)&#10;    );&#10;}" description="Create a function for integration test DI of a ZF service" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="camelCase(String)" defaultValue="ServiceName" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="tunit" value="use PHPUnit\Framework\TestCase;&#10;use Prophecy\PhpUnit\ProphecyTrait;&#10;&#10;class $NAME$ extends TestCase&#10;{&#10;    use ProphecyTrait;&#10;&#10;    public function $TESTNAME$(): void&#10;    {&#10;&#10;    }&#10;}" description="Unit test" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TESTNAME" expression="" defaultValue="test" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
</templateSet>